name: Create tag

on:
  push:
    branches:
      - main

jobs:
  tag-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get current version
        id: get_version
        run: |
          if git tag --list | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$'; then
            CURRENT_VERSION=$(git tag --list | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1 | sed 's/^v//')
          else
            CURRENT_VERSION="0.0.0"
          fi
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          echo "Current version is $CURRENT_VERSION"

      - name: Determine new version
        id: new_version
        run: |
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)

          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"

          if echo "$COMMIT_MESSAGE" | grep -iq "MAJOR"; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif echo "$COMMIT_MESSAGE" | grep -iq "MINOR"; then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            PATCH=$((PATCH + 1))
          fi

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "New version is $NEW_VERSION"

      - name: Create new tag
        run: |
          git config --global user.name "Chad Gauthier"
          git config --global user.email "chad.gauthier32@gmail.com"
          git tag -a "v$NEW_VERSION" -m "Release $NEW_VERSION"
          git push origin --tags